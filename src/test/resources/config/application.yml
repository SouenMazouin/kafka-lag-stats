# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

spring:
  application:
    name: kafka
  mail:
    host: localhost
  main:
    allow-bean-definition-overriding: true
  messages:
    basename: i18n/messages
  mvc:
    favicon:
      enabled: false
  security:
    user:
      name: test
      password: test
  task:
    execution:
      thread-name-prefix: kafka-task-
      pool:
        core-size: 1
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: kafka-scheduling-
      pool:
        size: 1
  thymeleaf:
    mode: HTML
  profiles:
    active: test

server:
  port: 10344
  address: localhost

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'kafkaApp'
  logging:
    # To test json console appender
    use-json-format: true # By default, logs are in Json format
    logstash:
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 (you can type `echo 'secret-key'|base64` on your command line)
        base64-secret: YWM4ZTQ1YTcwZGFhNWFhY2RiODZlYzA3ZTA5NzhjOGEyZjNlNmNlYmI0OTQ5N2ZkYzgzMmEwZjI2NDRjM2JmZGJmMTQyYmU2OTI5ZjU1MTQ1MjkzNWI1MWZjNzQzNzg5MDI2NWI0MDdhMTEwNTUxOGU5ODc3NjFiNGQ5NzZmYjc=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
  metrics:
    logs: # Reports metrics in the logs
      enabled: true
      report-frequency: 60 # in seconds
kafka:
  bootstrap.servers: ${kafkaBootstrapServers}
  consumer:
    key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    bootstrap.servers: ${kafkaBootstrapServers}
    group.id: kafka
    auto.offset.reset: earliest
  producer:
    key.serializer: org.apache.kafka.common.serialization.StringSerializer
    value.serializer: org.apache.kafka.common.serialization.StringSerializer
    bootstrap.servers: ${kafkaBootstrapServers}
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
